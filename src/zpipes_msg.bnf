The following ABNF grammar defines the ZPIPES protocol:

    ZPIPES = reader | writer

    reader = input-command *fetch-command close-command
    input-command = c:input ( s:ready | s:failed )
    fetch-command = c:fetch ( s:fetched | s:empty | s:timeout | s:failed )
    close-command = c:close ( s:closed | s:failed )

    writer = output-command *store-command close-command
    output = c:output ( s:ready | s:failed )
    store = c:store ( s:stored | s:failed )

    ;         Create a new pipe for reading
    input           = signature %d1 pipename
    signature       = %xAA %xA0             ; two octets
    pipename        = string                ; Name of pipe

    ;         Create a new pipe for writing
    output          = signature %d2 pipename
    pipename        = string                ; Name of pipe

    ;         Input or output request was successful
    ready           = signature %d3

    ;         Input or output request failed
    failed          = signature %d4 reason
    reason          = string                ; Reason for failure

    ;         Read next chunk of data from pipe
    fetch           = signature %d5 timeout
    timeout         = number-4              ; Timeout, msecs, or zero

    ;         Have data from pipe
    fetched         = signature %d6 chunk
    chunk           = chunk                 ; Chunk of data

    ;         Pipe is closed, no more data
    end_of_pipe     = signature %d7

    ;         Get or put ended with timeout
    timeout         = signature %d8

    ;         Write chunk of data to pipe
    store           = signature %d9 chunk
    chunk           = chunk                 ; Chunk of data

    ;         Store was successful
    stored          = signature %d10

    ;         Close pipe
    close           = signature %d11

    ;         Close was successful
    closed          = signature %d12

    ; A chunk has 4-octet length + binary contents
    chunk           = number-4 *OCTET

    ; Strings are always length + text contents
    string          = number-1 *VCHAR

    ; Numbers are unsigned integers in network byte order
    number-1        = 1OCTET
    number-4        = 4OCTET
