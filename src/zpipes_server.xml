<class
    name = "zpipes_server"
    title = "ZPIPES server"
    proto = "zpipes_msg"
    script = "zproto_server_c"
    header = "../include"
    >
    This is a server implementation for the ZPIPES protocol
    <include filename = "license.xml" />

    <!-- State machine for a client connection -->
    <state name = "start">
        <event name = "input" next = "reading">
            <action name = "open pipe for input" />
            <action name = "send" message = "ready" />
        </event>
        <event name = "output" next = "writing">
            <action name = "open pipe for output" />
            <action name = "send" message = "ready" />
        </event>
    </state>

    <state name = "reading">
        <event name = "fetch" next = "expecting chunk">
            <action name = "expect chunk on pipe" />
        </event>
        <event name = "close">
            <action name = "close pipe" />
            <action name = "send" message = "closed" />
            <action name = "terminate" />
        </event>
    </state>

    <state name = "expecting chunk">
        <event name = "have chunk" next = "reading">
            <action name = "clear pending reads" />
            <action name = "fetch chunk from pipe" />
            <action name = "send" message = "fetched" />
        </event>
        <event name = "pipe terminated" next = "reading">
            <action name = "clear pending reads" />
            <action name = "send" message = "end of pipe" />
        </event>
        <event name = "timeout expired" next = "reading">
            <action name = "clear pending reads" />
            <action name = "send" message = "timeout" />
        </event>
    </state>
    
    <state name = "writing">
        <event name = "store" next = "writing">
            <action name = "store chunk to pipe" />
            <action name = "send" message = "stored" />
        </event>
        <event name = "close">
            <action name = "close pipe" />
            <action name = "send" message = "closed" />
            <action name = "terminate" />
        </event>
    </state>

    <state name = "defaults">
        <event name = "exception">
            <action name = "send" message = "failed" />
            <action name = "terminate" />
        </event>
        <event name = "$other">
            <action name = "send" message = "failed" />
        </event>
    </state>

    <!-- API methods
    <method name = "somename" return = "number">
        One-line description of method here
        <argument name = "some value" type = "string">What is this argument?</argument>
        <argument name = "some value" type = "number">What is this argument?</argument>
    </method>
    -->
</class>
